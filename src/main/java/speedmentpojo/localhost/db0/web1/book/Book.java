package speedmentpojo.localhost.db0.web1.book;

import com.speedment.Entity;
import com.speedment.field.ComparableField;
import com.speedment.field.StringField;
import com.speedment.internal.core.field.ComparableFieldImpl;
import com.speedment.internal.core.field.StringFieldImpl;
import java.util.Optional;
import javax.annotation.Generated;

/**
 * An interface representing an entity (for example, a row) in the Table
 * 'localhost.db0.web1.book'.
 * <p>
 * This Class or Interface has been automatically generated by Speedment. Any
 * changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public interface Book extends Entity<Book> {
    
    /**
     * This Field corresponds to the {@link Book} field that can be obtained
     * using the {@link Book#getId()} method.
     */
    public final static ComparableField<Book, Integer> ID = new ComparableFieldImpl<>("id", Book::getId, Book::setId);
    /**
     * This Field corresponds to the {@link Book} field that can be obtained
     * using the {@link Book#getPrice()} method.
     */
    public final static ComparableField<Book, Double> PRICE = new ComparableFieldImpl<>("price", o -> o.getPrice().orElse(null), Book::setPrice);
    /**
     * This Field corresponds to the {@link Book} field that can be obtained
     * using the {@link Book#getName()} method.
     */
    public final static StringField<Book> NAME = new StringFieldImpl<>("name", o -> o.getName().orElse(null), Book::setName);
    
    /**
     * Returns the id of this Book. The id field corresponds to the database
     * column db0.web1.book.id.
     * 
     * @return the id of this Book
     */
    Integer getId();
    
    /**
     * Returns the price of this Book. The price field corresponds to the
     * database column db0.web1.book.price.
     * 
     * @return the price of this Book
     */
    Optional<Double> getPrice();
    
    /**
     * Returns the name of this Book. The name field corresponds to the database
     * column db0.web1.book.name.
     * 
     * @return the name of this Book
     */
    Optional<String> getName();
    
    /**
     * Sets the id of this Book. The id field corresponds to the database column
     * db0.web1.book.id.
     * 
     * @param id to set of this Book
     * @return this Book instance
     */
    Book setId(Integer id);
    
    /**
     * Sets the price of this Book. The price field corresponds to the database
     * column db0.web1.book.price.
     * 
     * @param price to set of this Book
     * @return this Book instance
     */
    Book setPrice(Double price);
    
    /**
     * Sets the name of this Book. The name field corresponds to the database
     * column db0.web1.book.name.
     * 
     * @param name to set of this Book
     * @return this Book instance
     */
    Book setName(String name);
}