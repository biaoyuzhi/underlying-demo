package speedmentpojo.localhost.db0.web1.student;

import com.speedment.Entity;
import com.speedment.field.ComparableField;
import com.speedment.field.StringField;
import com.speedment.internal.core.field.ComparableFieldImpl;
import com.speedment.internal.core.field.StringFieldImpl;
import java.util.Optional;
import javax.annotation.Generated;

/**
 * An interface representing an entity (for example, a row) in the Table
 * 'localhost.db0.web1.student'.
 * <p>
 * This Class or Interface has been automatically generated by Speedment. Any
 * changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public interface Student extends Entity<Student> {
    
    /**
     * This Field corresponds to the {@link Student} field that can be obtained
     * using the {@link Student#getId()} method.
     */
    public final static ComparableField<Student, Integer> ID = new ComparableFieldImpl<>("id", Student::getId, Student::setId);
    /**
     * This Field corresponds to the {@link Student} field that can be obtained
     * using the {@link Student#getName()} method.
     */
    public final static StringField<Student> NAME = new StringFieldImpl<>("name", o -> o.getName().orElse(null), Student::setName);
    /**
     * This Field corresponds to the {@link Student} field that can be obtained
     * using the {@link Student#getCourse()} method.
     */
    public final static StringField<Student> COURSE = new StringFieldImpl<>("course", o -> o.getCourse().orElse(null), Student::setCourse);
    /**
     * This Field corresponds to the {@link Student} field that can be obtained
     * using the {@link Student#getScore()} method.
     */
    public final static ComparableField<Student, Integer> SCORE = new ComparableFieldImpl<>("score", o -> o.getScore().orElse(null), Student::setScore);
    
    /**
     * Returns the id of this Student. The id field corresponds to the database
     * column db0.web1.student.id.
     * 
     * @return the id of this Student
     */
    Integer getId();
    
    /**
     * Returns the name of this Student. The name field corresponds to the
     * database column db0.web1.student.name.
     * 
     * @return the name of this Student
     */
    Optional<String> getName();
    
    /**
     * Returns the course of this Student. The course field corresponds to the
     * database column db0.web1.student.course.
     * 
     * @return the course of this Student
     */
    Optional<String> getCourse();
    
    /**
     * Returns the score of this Student. The score field corresponds to the
     * database column db0.web1.student.score.
     * 
     * @return the score of this Student
     */
    Optional<Integer> getScore();
    
    /**
     * Sets the id of this Student. The id field corresponds to the database
     * column db0.web1.student.id.
     * 
     * @param id to set of this Student
     * @return this Student instance
     */
    Student setId(Integer id);
    
    /**
     * Sets the name of this Student. The name field corresponds to the database
     * column db0.web1.student.name.
     * 
     * @param name to set of this Student
     * @return this Student instance
     */
    Student setName(String name);
    
    /**
     * Sets the course of this Student. The course field corresponds to the
     * database column db0.web1.student.course.
     * 
     * @param course to set of this Student
     * @return this Student instance
     */
    Student setCourse(String course);
    
    /**
     * Sets the score of this Student. The score field corresponds to the
     * database column db0.web1.student.score.
     * 
     * @param score to set of this Student
     * @return this Student instance
     */
    Student setScore(Integer score);
}