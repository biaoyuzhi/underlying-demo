package speedmentpojo.localhost.db0.web1.person;

import com.speedment.Entity;
import com.speedment.field.ComparableField;
import com.speedment.field.StringField;
import com.speedment.internal.core.field.ComparableFieldImpl;
import com.speedment.internal.core.field.StringFieldImpl;
import java.util.Optional;
import javax.annotation.Generated;

/**
 * An interface representing an entity (for example, a row) in the Table
 * 'localhost.db0.web1.person'.
 * <p>
 * This Class or Interface has been automatically generated by Speedment. Any
 * changes made to this Class or Interface will be overwritten.
 * 
 * @author Speedment
 */
@Generated("Speedment")
public interface Person extends Entity<Person> {
    
    /**
     * This Field corresponds to the {@link Person} field that can be obtained
     * using the {@link Person#getId()} method.
     */
    public final static ComparableField<Person, Long> ID = new ComparableFieldImpl<>("id", Person::getId, Person::setId);
    /**
     * This Field corresponds to the {@link Person} field that can be obtained
     * using the {@link Person#getName()} method.
     */
    public final static StringField<Person> NAME = new StringFieldImpl<>("name", o -> o.getName().orElse(null), Person::setName);
    /**
     * This Field corresponds to the {@link Person} field that can be obtained
     * using the {@link Person#getPassword()} method.
     */
    public final static StringField<Person> PASSWORD = new StringFieldImpl<>("password", o -> o.getPassword().orElse(null), Person::setPassword);
    
    /**
     * Returns the id of this Person. The id field corresponds to the database
     * column db0.web1.person.id.
     * 
     * @return the id of this Person
     */
    Long getId();
    
    /**
     * Returns the name of this Person. The name field corresponds to the
     * database column db0.web1.person.name.
     * 
     * @return the name of this Person
     */
    Optional<String> getName();
    
    /**
     * Returns the password of this Person. The password field corresponds to the
     * database column db0.web1.person.password.
     * 
     * @return the password of this Person
     */
    Optional<String> getPassword();
    
    /**
     * Sets the id of this Person. The id field corresponds to the database
     * column db0.web1.person.id.
     * 
     * @param id to set of this Person
     * @return this Person instance
     */
    Person setId(Long id);
    
    /**
     * Sets the name of this Person. The name field corresponds to the database
     * column db0.web1.person.name.
     * 
     * @param name to set of this Person
     * @return this Person instance
     */
    Person setName(String name);
    
    /**
     * Sets the password of this Person. The password field corresponds to the
     * database column db0.web1.person.password.
     * 
     * @param password to set of this Person
     * @return this Person instance
     */
    Person setPassword(String password);
}